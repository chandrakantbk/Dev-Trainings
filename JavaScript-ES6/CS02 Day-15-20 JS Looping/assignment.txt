
Assignment: last 30% emplyees to get early retirement

var total_employess = 1000;

var older_emp_count: 30%;   

var      = 1000;



earlyRetirement();



Array [10, 202, 30, 40]
Object {key: value }



stutent_1 = { name: 'Shrikant', seat_number: 101 }

var a = 10;


var arr  = [10, 2020, 20 ]

arr[1]

                          1    2    3    4
students_seat_numbers = [ 101, 102, 103, 104 ]
                index      0    1    2    3

students_seat_numbers[ 0 ]   // 101 
students_seat_numbers[ 1 ]   // 102 
students_seat_numbers[ 2 ]   // 103
students_seat_numbers[ 3 ]   // 104
students_seat_numbers[ 4 ]   // undefined 
 
for(var index = 0; index <= 3; index++   ){

    console.log( students_seat_numbers[ index ]   )

}





1 - 10th different class

> from each class you need to send 3 students' seat number 

var toppers = [ [101, 105, 106 ], [ 202, 203, 205 ]   ]

var toppers =  { 
    class_10th: [ 101, 202, 601 ],
    class_9th: [ 901, 905, 903 ]
}





var arr = [ 10, 2020, 30]

var arr = [ "KK", 2020, 30]

var arr = [ "KK", 2020, false]

var arr = [ "CK", [1010, 20, 30], false]


all_stuents = [ { name: "Trupti", seat_number: 101 }, { name: "KK", seat_number: 102 } ]

student_1 = { name: "Trupti", seat_number: 101 }
student_2 = { name: "KK", seat_number: 102 }


student_1_name = "Trupti";
student_1_seat_number = 101;

student_2_name = "KK";
student_2_seat_number = 102;












obj = { key: value, key2: value2   }
    
      C1   C2    C3
 R1   10   20    30   ===> 60
 R2   50   60    40   ===> 150
 R3   60   70    80   ===> 210

for(var row = 0; row < 3; row++ ){
    
    var sum = 0;

    for(var col = 0; col < 3; col++){
        sum = sum + col_value;
    }

    console.log( sum )

}
JS client side programming ===> now with the help node.js server side 


Data types 

number
string 
boolean
array 
object 


null 
undefined
NaN

BigInt
Symbol




var n = 10;

var obj = {name: "Namrata", key2: "value2"  }

console.log( obj.name )

obj["name"]   // Namrata


var arr = ["Namrata", {name: "CK" }, 30, true]
           0            1             2   3 
arr[1]  // {name: "CK"}

arr[1].name

arr[1]["name"]








var input = "Mumbai (BOM)";

var is_origin_found = false;

//flight_data 3 values

for(var index = 0; index < flight_data.length; index++ ){
    
    if(input ==  flight_data[ index ].origin ){
        is_origin_found = true;

        break;
        console.log("Stopped for loop")
    }
 
}


console.log("City Found: " + is_origin_found)





 










var marks = [50, 30, 400]

students.name 

students.name[3]




students[0].name 
students[1].name 
students[2].name 
 

var array = [50, 100, 300, "TEST" ]
              0   1    2     3
         
array.length // 4

for(var i = 0; i < array.length; i++  )
{
    console.log(  array[ i ]  )
}

for(var i in array){
   // i string  "0"
    console.log(  array[ "0" ] )
}

for of 

for(var val of  array ){
    console.log( val )
}



falsy 
""
false 
0
NaN
null 
undefined

var counter = 1;

for( ; ; ){
    console.log(counter)
}

SK      : 
Arushi  : 0
Namrata : 
Kanchan : 0
Trupti  :
Sanjay  : 



for(; condition; ){

}




var num = 20;

for( ; num <= 10; num++ ){
    console.log( num );
}

for(var val of array){
    console.log(val)
}


for(var index in array){
    console.log( array[index] )
}

while( false  ){
    console.log( num );  // 1
    num++;
} 


var num = 50;

do{

   // look at the building construction
   // work for it

} while( is_there_work ) // false 





1
2
3
4















while 
do while 



// write a program to tell whether given array is empty or with elements

var array = [];
var students = [10, 20]
var marks = [ ]
var is_empty = getStatusOfArray( marks );
var is_attended = getStatusOfArray( marks );


array = [10, 20, 30, 50]

array = ADRESS4500;

[  ]
[ ]
[ ]
[ ]
[ ]



console.log("I am after function call")





function getStatusOfArray( param ){

    return param.length == 0 // true  

}



for 
    for in 
    for of 
    syntax 

while 
do while 


// Write a program to tell me, how many days it takes to complete all the tasks

100 Workers;

Tasks = 5000;

1 worker / day: 10 task;

Print : Today I am working 


 100 workers / day = tasks ? 
 100 workers / day
                100 * 10 = 1000 tasks

 no. of days (5) ===    task / 1000 task;




1 worker / day: 10 task;


10 * 10 = 100;


var workers = 10;
var tasks_per_day = 10;
var tasks = 100;
var no_of_working_days = 0;

while( no_of_working_days < (tasks/tasks_per_day * workers)  ){
            // <=
            //( 100 / 10 * 10 )

    console.log("Today I am working");
    no_of_working_days++; // 1

}


no_of_working_days = 0;

do{
     console.log("Today I am working");
     no_of_working_days++; //

} while(no_of_days < 1)


alert("I will be working for: " + no_of_days + " day(s)");







Infinite loop 

for( ; ; ){ 
    // infinite loop
}

while(true){

}



infinite 

for(var i=0; true; i++){
    // infinite
}

for( ; ; ){
    // infinite
}

while( 1 ){
     // infinite  
}


birth 
O2
death

death = true;

while(1){
    breath++;

    if(death){
        break;
    }
}



baking system

login ==> 
timer starts


while(true){
    
    miliseconds++;

    if(logout){
        break;
    }
}



